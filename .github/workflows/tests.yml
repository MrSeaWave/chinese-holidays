name: 'TESTS CI'

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# 设置环境变量
env:
  TZ: Asia/Shanghai # 时区（设置时区可使页面中的`最近更新时间`使用时区时间）

jobs:
  test-ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Global install Yarn 🔨
        run: npm install -g yarn
      - name: Print Env 📝
        run: |
          echo "node"
          node -v
          echo "npm"
          npm -v
          echo "yarn"
          yarn -v
      - name: Get yarn cache directory path 📝
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn cache 📝
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache node_modules 📝
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodeModules-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodeModules-

      - name: Install dependencies 📦️
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build 🔨
        run: npm run build
      - name: Run test ✅
        run: npm run test
      - name: Upload coverage report to codeCov
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
